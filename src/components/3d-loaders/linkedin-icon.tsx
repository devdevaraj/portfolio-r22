/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Sphere: THREE.Mesh;
    Torus: THREE.Mesh;
    Curve002: THREE.Mesh;
    Curve003: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export default function LinkedinIcon(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/3d/custom-linkedin-3d.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Sphere"
          castShadow
          receiveShadow
          geometry={nodes.Sphere.geometry}
          material={materials["Material.001"]}
          position={[0.0013, 0.0003, 0.0297]}
          scale={[0.6988, 0.0453, 0.6988]}
        />
        <mesh
          name="Torus"
          castShadow
          receiveShadow
          geometry={nodes.Torus.geometry}
          material={materials["Material.001"]}
          position={[0.0013, 0.0003, 0.0297]}
          scale={[1.0448, 0.2375, 1.0448]}
        />
        <mesh
          name="Curve002"
          castShadow
          receiveShadow
          geometry={nodes.Curve002.geometry}
          material={materials["Material.002"]}
          position={[-0.0177, 0.0454, -0.1012]}
          scale={[5.7123, 1.9453, 5.7123]}
        />
        <mesh
          name="Curve003"
          castShadow
          receiveShadow
          geometry={nodes.Curve003.geometry}
          material={materials["Material.002"]}
          position={[0.086, -0.0444, -0.1012]}
          rotation={[-Math.PI, 0, 0]}
          scale={[-5.7123, -1.9453, -5.7123]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/3d/custom-linkedin-3d.glb");
