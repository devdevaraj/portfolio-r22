/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Curve001: THREE.Mesh;
    Sphere: THREE.Mesh;
    Torus: THREE.Mesh;
    Curve: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
  };
};

export default function GithubIcon(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/3d/custom-github-3d.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Curve001"
          castShadow
          receiveShadow
          geometry={nodes.Curve001.geometry}
          material={materials["Material.002"]}
          position={[0.135, -0.044, 0.174]}
          rotation={[-Math.PI, 0, 0]}
          scale={[-6.042, -1.312, -6.042]}
        />
        <mesh
          name="Sphere"
          castShadow
          receiveShadow
          geometry={nodes.Sphere.geometry}
          material={materials["Material.001"]}
          position={[0.001, 0, 0.03]}
          scale={[0.699, 0.045, 0.699]}
        />
        <mesh
          name="Torus"
          castShadow
          receiveShadow
          geometry={nodes.Torus.geometry}
          material={materials["Material.001"]}
          position={[0.001, 0, 0.03]}
          scale={[1.045, 0.237, 1.045]}
        />
        <mesh
          name="Curve"
          castShadow
          receiveShadow
          geometry={nodes.Curve.geometry}
          material={materials.Material}
          position={[-0.12, 0.045, 0.16]}
          scale={[6.042, 1.312, 6.042]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/3d/custom-github-3d.glb");
